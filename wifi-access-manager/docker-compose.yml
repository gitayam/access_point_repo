version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: wifi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wifi_access_manager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - wifi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: wifi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wifi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wifi-backend
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/wifi_access_manager
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wifi-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm start

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wifi-frontend
    environment:
      VITE_API_URL: http://backend:3001
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - wifi-network

volumes:
  postgres_data:
  redis_data:

networks:
  wifi-network:
    driver: bridge